openapi: "3.0.1"
info:
  title: "Survivors API5"
  version: "v2"
servers:
- url: /prod # substituir pelo "api_url" do deployment + /sobreviventes
  variables:
    basePath:
      default: "default"
paths:
  /sobreviventes:
    get:
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfSurvivalItem"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:<SEUUSERIDAQUI>:function:python_terraform_lambda/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PassengerFeatures"
        required: true
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SurvivalResponse"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:<SEUUSERIDAQUI>:function:python_terraform_lambda/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  /sobreviventes/{id}:
    get:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "404 response"
          content: {}
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SurvivalResponse"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:<SEUUSERIDAQUI>:function:python_terraform_lambda/invocations"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
    delete:
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "204":
          description: "204 response"
          content: {}
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:<SEUUSERIDAQUI>:function:python_terraform_lambda/invocations"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
components:
  schemas:
    ArrayOfSurvivalItem:
      type: "array"
      items:
        $ref: "#/components/schemas/SurvivalItem"
    SurvivalItem:
      allOf:
      - $ref: "#/components/schemas/SurvivalResponse"
    PassengerFeatures:
      required:
      - "features"
      type: "object"
      properties:
        features:
          type: "array"
          items:
            type: "number"
    SurvivalResponse:
      required:
      - "id"
      - "probability"
      type: "object"
      properties:
        id:
          type: "string"
        probability:
          type: "number"
